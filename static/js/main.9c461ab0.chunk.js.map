{"version":3,"sources":["types/TodosStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosStatus","TodoList","_ref","todos","selectedTodo","onSelect","_jsxs","className","children","_jsx","length","map","_ref2","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","setQuery","selectedTodosStatus","setSelectedTodosStatus","onSubmit","e","preventDefault","value","onChange","target","Active","Completed","All","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todo","onClose","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isUserInfoLoaded","setIsUserInfoLoaded","useEffect","concat","getUser","userFromServer","catch","error","Error","href","email","name","App","setTodos","_useState5","_useState6","isTodosLoaded","setIsTodosLoaded","_useState7","_useState8","setSelectedTodo","_useState9","_useState10","todosFromServer","chooseUser","useCallback","_Fragment","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c461ab0.chunk.js","sourcesContent":["export enum TodosStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.length\n        ? (\n          todos.map(({\n            id,\n            title,\n            completed,\n            userId,\n          }) => (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': id === selectedTodo?.id,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelect({\n                    id,\n                    title,\n                    completed,\n                    userId,\n                  })}\n                >\n                  <span className=\"icon\">\n                    <span\n                      className={classNames('far', {\n                        'fa-eye-slash': id === selectedTodo?.id,\n                        'fa-eye': id !== selectedTodo?.id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td className=\"has-text-danger\">\n              No matches found\n            </td>\n          </tr>\n        )}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodosStatus } from '../../types/TodosStatus';\n\ninterface Props {\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  selectedTodosStatus: string;\n  setSelectedTodosStatus: React.Dispatch<React.SetStateAction<TodosStatus>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  selectedTodosStatus,\n  setSelectedTodosStatus,\n}) => {\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSelection = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case TodosStatus.Active:\n        setSelectedTodosStatus(TodosStatus.Active);\n        break;\n\n      case TodosStatus.Completed:\n        setSelectedTodosStatus(TodosStatus.Completed);\n        break;\n\n      default:\n        setSelectedTodosStatus(TodosStatus.All);\n        break;\n    }\n  };\n\n  const handleClearInput = () => setQuery('');\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedTodosStatus}\n            onChange={handleSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          onChange={handleInput}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clear input\"\n              onClick={handleClearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserInfoLoaded, setIsUserInfoLoaded] = useState(false);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsUserInfoLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserInfoLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close todo info\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { TodosStatus } from './types/TodosStatus';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodosStatus, setSelectedTodosStatus] = useState<TodosStatus>(\n    TodosStatus.All,\n  );\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setIsTodosLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  const chooseUser = useCallback((todo: Todo | null) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const filterTodos = () => {\n    const todosMatchQuery = todos.filter(({ title }) => (\n      title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    return todosMatchQuery.filter(todo => {\n      switch (selectedTodosStatus) {\n        case TodosStatus.Active:\n          return !todo.completed;\n\n        case TodosStatus.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                selectedTodosStatus={selectedTodosStatus}\n                setSelectedTodosStatus={setSelectedTodosStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded\n                ? (\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodo={selectedTodo}\n                    onSelect={chooseUser}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => chooseUser(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}